/* empty css                               */
import { c as createAstro, d as createComponent, r as renderTemplate, m as maybeRenderHead, f as addAttribute, j as renderTransition, h as renderComponent, u as unescapeHTML } from '../astro_Bbjgh55g.mjs';
import 'kleur/colors';
import { U as UPLOADS_URL, c as create_ssr_component, e as add_attribute, v as validate_component, h as each, i as escape, j as getProudct, $ as $$Layout, f as formatCurrency } from './404_BNLLaKx8.mjs';
import 'clsx';
/* empty css                              */
/* empty css                              */
import { A as AddToCartButton } from './_category__CZnnHGJY.mjs';

const $$Astro$1 = createAstro();
const $$Gallery = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
  Astro2.self = $$Gallery;
  const { product } = Astro2.props;
  const images = product?.images;
  return renderTemplate`${maybeRenderHead()}<div class="gallery" data-astro-cid-ihllb3az> ${images?.map((image, index) => renderTemplate`<input${addAttribute("gallery-" + (index + 1), "id")} type="radio" name="position"${addAttribute(index === 0, "checked")} data-astro-cid-ihllb3az>`)} <div class="gallery-content" data-astro-cid-ihllb3az> <div class="flex" style="overflow: hidden; border-radius: 20px;" data-astro-cid-ihllb3az${addAttribute(renderTransition($$result, "pul46pti", "", `${product?.slug}`), "data-astro-transition-scope")}> <div class="gallery-items flex" data-astro-cid-ihllb3az> ${images?.map((image, index) => renderTemplate`<div class="flex gallery-item" data-astro-cid-ihllb3az> <img class="product-image"${addAttribute(UPLOADS_URL + image?.file, "src")} width="636" height="500"${addAttribute(`Imagen ${index + 1} del producto ${product?.name}`, "alt")} data-astro-cid-ihllb3az> </div>`)} </div> </div> </div> <div class="gallery-nav" data-astro-cid-ihllb3az> ${product.images?.map((image, index) => renderTemplate`<label class="flex"${addAttribute("gallery-" + (index + 1), "for")} data-astro-cid-ihllb3az> <img${addAttribute(UPLOADS_URL + image?.file, "src")}${addAttribute("Miniatura de la imagen " + (index + 1), "alt")} data-astro-cid-ihllb3az> </label>`)} </div> </div> `;
}, "C:/www/astro/src/components/Gallery.astro", "self");

/* C:/www/astro/src/components/ui/SvelteQuantity.svelte generated by Svelte v4.2.1 */

const css = {
	code: "input.svelte-55w5bj::-webkit-outer-spin-button,input.svelte-55w5bj::-webkit-inner-spin-button{-webkit-appearance:none;margin:0}input[type=number].svelte-55w5bj{-moz-appearance:textfield}",
	map: null
};

const SvelteQuantity = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { min = 0 } = $$props;
	let { max = null } = $$props;
	let { name = void 0 } = $$props;
	let { value = min } = $$props;
	let inputEl;

	if ($$props.min === void 0 && $$bindings.min && min !== void 0) $$bindings.min(min);
	if ($$props.max === void 0 && $$bindings.max && max !== void 0) $$bindings.max(max);
	if ($$props.name === void 0 && $$bindings.name && name !== void 0) $$bindings.name(name);
	if ($$props.value === void 0 && $$bindings.value && value !== void 0) $$bindings.value(value);
	$$result.css.add(css);
	return `  <div class="relative flex items-center"><button type="button" id="decrement-button" class="flex-shrink-0 bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 dark:border-gray-600 hover:bg-gray-200 inline-flex items-center justify-center border border-gray-300 rounded-md h-5 w-5 focus:ring-gray-100 dark:focus:ring-gray-700 focus:ring-2 focus:outline-none" data-svelte-h="svelte-4dmot7"><svg class="w-2.5 h-2.5 text-gray-900 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 2"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h16"></path></svg></button> <input${add_attribute("min", min, 0)}${add_attribute("max", max, 0)}${add_attribute("name", name, 0)} type="number" id="counter-input-example" class="pr-0 pl-0 flex-shrink-0 text-gray-900 dark:text-white border-0 bg-transparent text-sm font-normal focus:outline-none focus:ring-0 max-w-[2.5rem] text-center svelte-55w5bj" placeholder="" required${add_attribute("value", value, 0)}${add_attribute("this", inputEl, 0)}> <button type="button" id="increment-button" class="flex-shrink-0 bg-gray-100 dark:bg-gray-700 dark:hover:bg-gray-600 dark:border-gray-600 hover:bg-gray-200 inline-flex items-center justify-center border border-gray-300 rounded-md h-5 w-5 focus:ring-gray-100 dark:focus:ring-gray-700 focus:ring-2 focus:outline-none" data-svelte-h="svelte-1mar01q"><svg class="w-2.5 h-2.5 text-gray-900 dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 18 18"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 1v16M1 9h16"></path></svg></button> </div>`;
});

/* C:/www/astro/src/components/Purchase.svelte generated by Svelte v4.2.1 */

const Purchase = create_ssr_component(($$result, $$props, $$bindings, slots) => {
	let { product = void 0 } = $$props;
	let qty = 1;
	let selectedAttributesOptions = [];

	if ($$props.product === void 0 && $$bindings.product && product !== void 0) $$bindings.product(product);
	let $$settled;
	let $$rendered;
	let previous_head = $$result.head;

	do {
		$$settled = true;

		// $$result.head is mutated by the literal expression
		// need to reset it if we're looping back to prevent duplication
		$$result.head = previous_head;

		$$rendered = `<div>${validate_component(SvelteQuantity, "SvelteQuantity").$$render(
			$$result,
			{
				min: 1,
				max: 100,
				name: "quantity",
				value: qty
			},
			{
				value: $$value => {
					qty = $$value;
					$$settled = false;
				}
			},
			{}
		)} ${product?.attributes?.length > 0
		? `<div class="flex gap-2 mt-2">${each(product.attributes, (attribute, attributeIndex) => {
				return `${attribute.options
				? `<select${add_attribute("name", attribute.slug, 0)} class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"><option selected disabled${add_attribute("value", attribute.name, 0)}>${escape(attribute.name)}</option>${each(attribute.options?.split(","), (option, optionIndex) => {
						return `<option${add_attribute("value", option, 0)}>${escape(option)}</option>`;
					})}</select>`
				: ``}`;
			})}</div>`
		: ``} <div class="flex product-actions gap-2.5 mt-4">${validate_component(AddToCartButton, "AddToCartButton").$$render(
			$$result,
			{
				selectedAttributesOptions,
				disabledProp: false,
				product,
				quantity: qty
			},
			{},
			{}
		)}</div> </div>`;
	} while (!$$settled);

	return $$rendered;
});

const $$Astro = createAstro();
const $$product = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$product;
  const { product: productSlug } = Astro2.params;
  const product = await getProudct(productSlug);
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": product?.name, "data-astro-cid-j2hoaif3": true }, { "default": ($$result2) => renderTemplate` ${maybeRenderHead()}<main data-astro-cid-j2hoaif3> <div class="container flex-dir-column" data-astro-cid-j2hoaif3> <section class="product-overview" data-astro-cid-j2hoaif3> ${renderComponent($$result2, "Gallery", $$Gallery, { "product": product, "data-astro-cid-j2hoaif3": true })} <div class="product-details" data-astro-cid-j2hoaif3> <h1 class="product-title" data-astro-cid-j2hoaif3>${product?.name}</h1> <span class="product-price" data-astro-cid-j2hoaif3> ${formatCurrency(product?.price || 0)}</span> <div class="product-short-description" data-astro-cid-j2hoaif3>${unescapeHTML(product?.short_description)}</div> ${renderComponent($$result2, "Purchase", Purchase, { "product": product, "client:load": true, "client:component-hydration": "load", "client:component-path": "C:/www/astro/src/components/Purchase.svelte", "client:component-export": "default", "data-astro-cid-j2hoaif3": true })} <!-- <PurchaseProduct product={product} client:visible /> --> </div> </section> <div class="product-meta" data-astro-cid-j2hoaif3> <div class="meta-item" data-astro-cid-j2hoaif3> <strong data-astro-cid-j2hoaif3>Categoría:</strong> ${product?.categories?.map((category, index) => renderTemplate`<span data-astro-cid-j2hoaif3>${category.name} ${product?.categories.length === index + 1 ? "" : ","}</span>`)} </div> <!-- <div class="meta-item">
          <strong>Tags:</strong> Antifaz de semillas, Búhos
        </div> --> </div> <div class="product-description-panel" data-astro-cid-j2hoaif3> <h2 data-astro-cid-j2hoaif3>Descripción de ${product?.name}</h2> <div data-astro-cid-j2hoaif3>${unescapeHTML(product?.description)}</div> <!-- <h1>Rellenos de sacos térmicos en <strong>El Mundo del Saquito</strong></h1> --> <!-- <p>
          En <strong>El Mundo del Saquito</strong>, nos complace presentarles
          los secretos detrás del relleno de nuestros saquitos térmicos. La base
          de estos saquitos está compuesta por ingredientes naturales de alta
          calidad que proporcionan confort y bienestar.
        </p>
        <p>
          Nuestro relleno se compone principalmente de <strong
            >trigo, lavanda y hierbas provenzales</strong
          >. El trigo utilizado pasa por un riguroso proceso de limpieza que
          incluye tres cribados para eliminar cualquier impureza. Además,
          sometemos el trigo a una congelación durante entre 4 y 5 días para
          optimizar su capacidad de absorción de calor.
        </p>
        <p>
          El trigo no solo es eficiente en la absorción de calor, sino que
          también es extremadamente <strong>flexible y cómodo</strong>, lo que
          garantiza una experiencia agradable al usar nuestros saquitos. La
          lavanda que incorporamos se presenta en forma de flor seca y se
          utiliza ampliamente en <strong>aromaterapia</strong> debido a sus
          propiedades relajantes.
        </p>
        <p>
          Las <strong>hierbas provenzales</strong> que añadimos a nuestros
          saquitos térmicos son una mezcla exquisita de <strong
            >eucalipto, menta, tomillo, romero y salvia</strong
          >. Estas hierbas, junto con la lavanda, son un testimonio de cómo la
          naturaleza nos brinda sus maravillosas bondades para promover nuestro <strong
            >bienestar natural</strong
          >.
        </p>
        <p>
          En <strong>El Mundo del Saquito</strong>, estamos comprometidos con
          ofrecer productos de calidad que aprovechan los dones de la naturaleza
          para proporcionar confort y relajación. Descubre el mundo de los
          saquitos térmicos y experimenta la <strong
            >calidez y el bienestar</strong
          > que ofrecen.
        </p> --> </div> </div> </main> ` })}  `;
}, "C:/www/astro/src/pages/[category]/[product].astro", void 0);

const $$file = "C:/www/astro/src/pages/[category]/[product].astro";
const $$url = "/[category]/[product]";

export { $$product as default, $$file as file, $$url as url };
